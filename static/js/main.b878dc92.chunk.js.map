{"version":3,"sources":["components/api/api.js","components/RoverSelect/RoverSelect.jsx","components/CamerasSelect/CamerasSelect.jsx","components/SolRange/SolRange.jsx","components/NasaPhoto/NasaPhoto.jsx","App.jsx","index.jsx"],"names":["BASE_URL","API_KEY","process","urls","baseUrl","token","request","a","fetch","response","json","result","rovers","RoverSelect","selectedRover","filterByRoverName","className","value","name","defaultValue","id","onChange","disabled","map","rover","CamerasSelect","cameras","filterByCamerasName","selectedCamera","camera","SolRange","solRange","selectSolDays","htmlFor","min","max","max_sol","type","NasaPhoto","setSelectedRover","setSelectedCamera","setSolRange","useState","photoData","setPhotoData","hasOwnProperty","toLowerCase","totalUrl","fetchPhoto","data","photos","useEffect","useReducer","count","action","dispatch","console","log","onClick","length","src","img_src","alt","App","setRovers","setCameras","loadRoversFromPage","roversFromServer","target","currentRover","find","currentCamera","ReactDOM","render","document","getElementById"],"mappings":"oVA+BMA,EAAW,kDAIXC,EAAO,kBAFEC,4CAIFC,EAAO,CAClBC,QAAS,iDACTC,MAAOJ,GASHK,EAAO,uCAAG,8BAAAC,EAAA,sEACSC,MAAM,GAAD,OAAIR,GAAJ,OAAeC,IAD7B,cACRQ,EADQ,gBAEOA,EAASC,OAFhB,cAERC,EAFQ,yBAIPA,EAAOC,QAJA,2CAAH,qDC3CAC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,kBAAmBH,EAArC,EAAqCA,OAArC,OAEzB,qBAAKI,UAAU,SAAf,SACE,yBAEEC,MAAOH,EAAcI,KACrBC,aAAa,eACbH,UAAU,iBACVE,KAAK,GACLE,GAAG,SACHC,SAAUN,EAPZ,UASE,wBACEE,MAAM,eACNK,UAAQ,EACRN,UAAU,iBAHZ,0BAOCJ,EAAOW,KAAI,SAAAC,GAAK,OACf,wBAEEP,MAAOO,EAAMN,KACbF,UAAU,iBAHZ,SAKGQ,EAAMN,MAJFM,EAAMJ,cCrBRK,G,MAAgB,SAAC,GAAD,IAC3BC,EAD2B,EAC3BA,QACAC,EAF2B,EAE3BA,oBACAC,EAH2B,EAG3BA,eAH2B,OAK3B,qBAAKZ,UAAU,UAAf,SACE,yBAEEC,MAAOW,EAAeV,KACtBC,aAAa,gBACbD,KAAK,GACLE,GAAG,GACHJ,UAAU,kBACVK,SAAUM,EAPZ,UASE,wBACEV,MAAM,gBACND,UAAU,kBACVM,UAAQ,EAHV,2BAOCI,EAAQH,KAAI,SAAAM,GAAM,OACjB,wBAEEZ,MAAOY,EAAOX,KACdF,UAAU,kBAHZ,SAKGa,EAAOX,MAJHW,EAAOT,cCxBTU,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,cAAelB,EAA5B,EAA4BA,cAA5B,OAEtB,sBAAKE,UAAU,YAAf,UACE,uBAAOiB,QAAQ,UAAf,wBACA,uBACEC,IAAI,IACJC,IAAKrB,EAAcsB,QACnBC,KAAK,QACLrB,UAAU,mBACVI,GAAG,UACHD,aAAcY,EACdV,SAAUW,IAEZ,sBAAMhB,UAAU,kBAAhB,SACGe,S,iBCJMO,G,MAAY,SAAC,GAOnB,IANLxB,EAMI,EANJA,cACAc,EAKI,EALJA,eACAG,EAII,EAJJA,SACAQ,EAGI,EAHJA,iBACAC,EAEI,EAFJA,kBAEI,KADJC,YAEkCC,mBAAS,KADvC,mBACGC,EADH,KACcC,EADd,OAEoCF,mBAAS,GAF7C,mBAIItC,GAJJ,UAIuBD,EAAnBC,SAASC,EAAUF,EAAVE,MACbmB,EAAQ,GACRK,EAAS,GAETf,EAAc+B,eAAe,SAAWjB,EAAeiB,eAAe,UACxErB,EAAQV,EAAcI,KAAK4B,cAC3BjB,EAASD,EAAeV,KAAK4B,eAG/B,IAAMC,EAAQ,UAAM3C,EAAN,YAAiBoB,EAAjB,uBAAqCO,EAArC,YAAiDF,EAAjD,YAA2DxB,GAEnE2C,EAAU,uCAAG,8BAAAzC,EAAA,0DACbiB,IAASK,EADI,gCAEQrB,MAAMuC,GAFd,cAETtC,EAFS,gBAGIA,EAASC,OAHb,OAGTuC,EAHS,OAIfL,EAAaK,EAAKC,QAJH,OAOjBX,EAAiB,IACjBC,EAAkB,IARD,4CAAH,qDAYhBW,qBAAU,WACRH,MACC,IAqBH,IAlDI,EA+DsBI,sBAbV,SAACC,EAAOC,GACtB,OAAQA,EAAOjB,MACb,IAAK,WACH,OAAOgB,EAAQ,EAEjB,IAAK,WACH,OAAOA,EAAQ,EAEjB,QACE,OAAOA,KAIiC,GA/D1C,mBA+DGA,EA/DH,KA+DUE,EA/DV,KAgFJ,OAZAC,QAAQC,IAAIJ,GAaV,sBAAKrC,UAAU,QAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,wBACEA,UAAU,sBACVqB,KAAK,SACLqB,QAASV,EAHX,4BAOA,qBAAKhC,UAAU,uBAAf,SACE,cAAC,IAAD,SAGF,wBACEqB,KAAK,SACLqB,QA/BS,kBAAMH,EAAS,CAAElB,KAAM,cAgChCf,SAAoB,IAAV+B,EAHZ,eAOA,wBACEhB,KAAK,SACLqB,QArCS,kBAAMH,EAAS,CAAElB,KAAM,cAsChCf,SAAU+B,IAAUV,EAAUgB,OAHhC,gBAOAhB,EAAUgB,QACV,+DAIDhB,EAAUgB,OAAS,GAClB,sBAAK3C,UAAU,QAAf,UACE,uCACMqC,EAAQ,EADd,cACqBV,EAAUgB,UAE/B,qBAAKC,IAAKjB,EAAUU,GAAOQ,QAASC,IAAI,wBCnIrCC,G,MAAM,WAAO,IAAD,EACKrB,mBAAS,IADd,mBAChB9B,EADgB,KACRoD,EADQ,OAEmBtB,mBAAS,IAF5B,mBAEhB5B,EAFgB,KAEDyB,EAFC,OAGOG,mBAAS,IAHhB,mBAGhBhB,EAHgB,KAGPuC,EAHO,OAIqBvB,mBAAS,IAJ9B,mBAIhBd,EAJgB,KAIAY,EAJA,OAKSE,mBAAS,KALlB,mBAKhBX,EALgB,KAKNU,EALM,KAOjByB,EAAkB,uCAAG,4BAAA3D,EAAA,sELuCED,IKvCF,OACnB6D,EADmB,OAGzBH,EAAU,YAAIG,IAHW,2CAAH,qDAMxBhB,qBAAU,WACRe,MACC,IAyBH,OALAV,QAAQC,IAAI3C,GAMV,sBAAKE,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,uBAGA,qBAAKA,UAAU,cACf,cAAC,EAAD,CACED,kBA9BoB,SAAC,GAAgB,IAAdqD,EAAa,EAAbA,OACrBC,EAAezD,EAAO0D,MAAK,SAAA9C,GAAK,OAAIA,EAAMN,OAASkD,EAAOnD,SAEhEsB,EAAiB8B,GACjBJ,EAAWI,EAAa3C,UA2BpBZ,cAAeA,EACfF,OAAQA,IAEV,cAAC,EAAD,CACEe,oBA5BsB,SAAC,GAAgB,IAAdyC,EAAa,EAAbA,OACvBG,EAAgB7C,EAAQ4C,MAAK,SAAAzC,GAAM,OAAIA,EAAOX,OAASkD,EAAOnD,SAEpEuB,EAAkB+B,IA0Bd3C,eAAgBA,EAChBF,QAASA,IAEX,cAAC,EAAD,CACEM,cA3BgB,SAAC,GAAgB,IAAdoC,EAAa,EAAbA,OACvB3B,EAAY2B,EAAOnD,QA2Bfc,SAAUA,EACVjB,cAAeA,IAEjB,cAAC,EAAD,CACEA,cAAeA,EACfc,eAAgBA,EAChBG,SAAUA,EACVQ,iBAAkBA,EAClBC,kBAAmBA,EACnBC,YAAaA,SCvErB+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b878dc92.chunk.js","sourcesContent":["// import ky from 'ky';\n// import qs from 'qs';\n\n// const client = ky.create({\n//   prefixUrl: 'https://api.nasa.gov/mars-photos/api/v1/rovers'\n// })\n\n// const createUrl = ({ rover, ...params}) =>\n//   `${rover}/photos?${qs.stringify({\n//     api_key: process.env.REACT_APP_MARS_API_KEY,\n//     ...params\n//   })}`;\n\n// const api = {\n//   photos: {\n//     read: ({ rover, camera, sol, page }) =>\n//     client\n//       .get(\n//         createUrl({\n//           rover,\n//           camera,\n//           sol,\n//           page\n//         })\n//       )\n//       .json()\n//   }\n// };\n\n// export default api;\n\nconst BASE_URL = 'https://api.nasa.gov/mars-photos/api/v1/rovers?';\n\nconst apiKey = process.env.REACT_APP_NASA_KEY;\n\nconst API_KEY = `api_key=${apiKey}`;\n\nexport const urls = {\n  baseUrl: 'https://api.nasa.gov/mars-photos/api/v1/rovers',\n  token: API_KEY,\n}\n\n// console.log(apiKey);\n// console.log(API_KEY);\n\n// https://api.nasa.gov/mars-photos/api/v1/rovers/\n// curiosity/photos?sol=1000&camera=fhaz&api_key=DEMO_KEY\n\nconst request = async() => {\n  const response = await fetch(`${BASE_URL}${API_KEY}`);\n  const result = await response.json();\n\n  return result.rovers;\n};\n\nexport const getRovers = () => request();\n\n\nconst createPhotoUrl = ({ rover, sol, camera }) => `${BASE_URL}\n  /${rover}/photos?sol=${sol}${API_KEY}`;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './roverSelect.scss';\n\nexport const RoverSelect = ({ selectedRover, filterByRoverName, rovers }) => (\n\n  <div className=\"rovers\">\n    <select\n      // eslint-disable-next-line react/prop-types\n      value={selectedRover.name}\n      defaultValue=\"Choose rover\"\n      className=\"rovers__select\"\n      name=\"\"\n      id=\"select\"\n      onChange={filterByRoverName}\n    >\n      <option\n        value=\"Choose rover\"\n        disabled\n        className=\"rovers__option\"\n      >\n        Choose rover\n      </option>\n      {rovers.map(rover => (\n        <option\n          key={rover.id}\n          value={rover.name}\n          className=\"rovers__option\"\n        >\n          {rover.name}\n        </option>\n      ))}\n    </select>\n  </div>\n);\n\nRoverSelect.propTypes = {\n  selectedRover: PropTypes.shape({}).isRequired,\n\n  filterByRoverName: PropTypes.func.isRequired,\n\n  rovers: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './camerasSelect.scss';\n\nexport const CamerasSelect = ({\n  cameras,\n  filterByCamerasName,\n  selectedCamera,\n}) => (\n  <div className=\"cameras\">\n    <select\n      // eslint-disable-next-line react/prop-types\n      value={selectedCamera.name}\n      defaultValue=\"Choose Camera\"\n      name=\"\"\n      id=\"\"\n      className=\"cameras__select\"\n      onChange={filterByCamerasName}\n    >\n      <option\n        value=\"Choose Camera\"\n        className=\"cameras__option\"\n        disabled\n      >\n        Choose Camera\n      </option>\n      {cameras.map(camera => (\n        <option\n          key={camera.id}\n          value={camera.name}\n          className=\"cameras__option\"\n        >\n          {camera.name}\n        </option>\n\n      ))}\n    </select>\n  </div>\n);\n\nCamerasSelect.propTypes = {\n  cameras: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n\n  selectedCamera: PropTypes.shape({}).isRequired,\n\n  filterByCamerasName: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './solRange.scss';\n\nexport const SolRange = ({ solRange, selectSolDays, selectedRover }) => (\n\n  <div className=\"sol-range\">\n    <label htmlFor=\"rangeId\">Choose sol</label>\n    <input\n      min=\"1\"\n      max={selectedRover.max_sol}\n      type=\"range\"\n      className=\"sol-range__field\"\n      id=\"rangeId\"\n      defaultValue={solRange}\n      onChange={selectSolDays}\n    />\n    <span className=\"sol-range__text\">\n      {solRange}\n    </span>\n  </div>\n);\n\nSolRange.propTypes = {\n  solRange: PropTypes.string.isRequired,\n  selectSolDays: PropTypes.func.isRequired,\n  selectedRover: PropTypes.shape({\n  }).isRequired,\n};\n","import React, { useState, useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { urls } from '../api/api';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport './nasaPhoto.scss';\n\n// import { UrlContext } from '../context/UrlContext';\n\nexport const NasaPhoto = ({\n  selectedRover,\n  selectedCamera,\n  solRange,\n  setSelectedRover,\n  setSelectedCamera,\n  setSolRange,\n}) => {\n  const [photoData, setPhotoData] = useState([]);\n  const [currentPhoto, setCurrentPhoto] = useState(0);\n\n  const { baseUrl, token } = urls;\n  let rover = '';\n  let camera = '';\n\n  if (selectedRover.hasOwnProperty('name') && selectedCamera.hasOwnProperty('name')) {\n    rover = selectedRover.name.toLowerCase();\n    camera = selectedCamera.name.toLowerCase()\n  }\n\n  const totalUrl = `${baseUrl}/${rover}/photos?sol=${solRange}&${camera}&${token}`;\n\n  const fetchPhoto = async() => {\n    if (rover && camera) {\n      const response = await fetch(totalUrl);\n      const data = await response.json();\n      setPhotoData(data.photos);\n    }\n\n    setSelectedRover({});\n    setSelectedCamera({});\n    // setSolRange('1');\n  };\n\n  useEffect(() => {\n    fetchPhoto();\n  }, []);\n\n  // const handleKeyUp = () => {\n  //   const keyActionMap = {\n  //     ArrowLeft: this.selectPreviousPhoto.bind(this),\n  //     ArrowRight: this.selectNextPhoto.bind(this),\n  //     Space: this.handlePauseClick.bind(this)\n  //   }\n\n  //   const action = keyActionMap[event.code];\n\n  //   if (action) {\n  //     event.preventDefault();\n  //     action()\n  //   };\n  // };\n\n  // const selectPreviousPhoto = () => {\n\n  // };\n\n  const reducer = (count, action) => {\n    switch (action.type) {\n      case 'increase':\n        return count + 1;\n\n      case 'decrease':\n        return count - 1;\n\n      default:\n        return count;\n    }\n  }\n\n  const [count, dispatch] = useReducer(reducer, 0);\n\n  const decrease = () => dispatch({ type: 'decrease'})\n  const increase = () => dispatch({ type: 'increase'})\n\n  console.log(count);\n\n  // console.log(photoData);\n\n  // if (!photoData) {\n  //   return (\n  //     <div>\n  //       Loading...\n  //     </div>\n  //   );\n  // }\n\n  return (\n    <div className=\"photo\">\n      <div className=\"photo__download-block\">\n        <button\n          className=\"photo__download-btn\"\n          type=\"button\"\n          onClick={fetchPhoto}\n        >\n          Download Photo\n        </button>\n        <div className=\"photo__download-icon\">\n          <PhotoCamera/>\n        </div>\n      </div>\n        <button\n          type=\"button\"\n          onClick={decrease}\n          disabled={count === 0}\n        >\n          -\n        </button>\n        <button\n          type=\"button\"\n          onClick={increase}\n          disabled={count === photoData.length}\n        >\n          +\n        </button>\n      {!photoData.length && (\n        <h2>\n          No photos, try another camera\n        </h2>\n      )}\n      {photoData.length > 1 && (\n        <div className=\"photo\">\n          <h2>\n            {`${count + 1} / ${photoData.length}`}\n          </h2>\n          <img src={photoData[count].img_src} alt=\"rover photo\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nNasaPhoto.propTypes = {\n  selectedRover: PropTypes.shape({}).isRequired,\n  selectedCamera: PropTypes.shape({}).isRequired,\n  solRange: PropTypes.string.isRequired,\n\n  setSelectedRover: PropTypes.func.isRequired,\n  setSelectedCamera: PropTypes.func.isRequired,\n  setSolRange: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { getRovers } from './components/api/api';\nimport { RoverSelect } from './components/RoverSelect';\nimport { CamerasSelect } from './components/CamerasSelect';\nimport { SolRange } from './components/SolRange';\nimport { NasaPhoto } from './components/NasaPhoto/';\n\nimport './app.scss';\n\nexport const App = () => {\n  const [rovers, setRovers] = useState([]);\n  const [selectedRover, setSelectedRover] = useState({});\n  const [cameras, setCameras] = useState([]);\n  const [selectedCamera, setSelectedCamera] = useState({});\n  const [solRange, setSolRange] = useState('1');\n\n  const loadRoversFromPage = async() => {\n    const roversFromServer = await getRovers();\n\n    setRovers([...roversFromServer]);\n  };\n\n  useEffect(() => {\n    loadRoversFromPage();\n  }, []);\n\n  const filterByRoverName = ({ target }) => {\n    const currentRover = rovers.find(rover => rover.name === target.value);\n\n    setSelectedRover(currentRover);\n    setCameras(currentRover.cameras);\n  };\n\n  const filterByCamerasName = ({ target }) => {\n    const currentCamera = cameras.find(camera => camera.name === target.value);\n\n    setSelectedCamera(currentCamera);\n  };\n\n  const selectSolDays = ({ target }) => {\n    setSolRange(target.value);\n  };\n\n  // console.log(rovers);\n  console.log(selectedRover);\n  // console.log(cameras);\n  // console.log(selectedCamera);\n  // console.log(solRange);\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__title\">\n        NASA APIs\n      </h1>\n      <div className=\"app__logo\" />\n      <RoverSelect\n        filterByRoverName={filterByRoverName}\n        selectedRover={selectedRover}\n        rovers={rovers}\n      />\n      <CamerasSelect\n        filterByCamerasName={filterByCamerasName}\n        selectedCamera={selectedCamera}\n        cameras={cameras}\n      />\n      <SolRange\n        selectSolDays={selectSolDays}\n        solRange={solRange}\n        selectedRover={selectedRover}\n      />\n      <NasaPhoto\n        selectedRover={selectedRover}\n        selectedCamera={selectedCamera}\n        solRange={solRange}\n        setSelectedRover={setSelectedRover}\n        setSelectedCamera={setSelectedCamera}\n        setSolRange={setSolRange}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}