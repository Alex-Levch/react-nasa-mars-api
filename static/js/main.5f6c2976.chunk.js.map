{"version":3,"sources":["components/api/api.js","components/RoverSelect/RoverSelect.jsx","components/CamerasSelect/CamerasSelect.jsx","components/SolRange/SolRange.jsx","components/NasaPhoto/NasaPhoto.jsx","App.jsx","index.jsx"],"names":["BASE_URL","API_KEY","process","urls","baseUrl","token","request","a","fetch","response","json","result","rovers","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","colorStyle","color","borderStyle","border","bgcStyle","backgroundColor","RoverSelect","selectedRover","filterByRoverName","classes","className","FormControl","variant","InputLabel","htmlFor","Select","native","value","name","onChange","label","inputProps","id","aria-label","map","rover","CamerasSelect","cameras","filterByCamerasName","selectedCamera","defaultValue","camera","SolRange","solRange","selectSolDays","min","max","max_sol","type","NasaPhoto","setSelectedRover","setSelectedCamera","setSolRange","useState","photoData","setPhotoData","hasOwnProperty","toLowerCase","totalUrl","fetchPhoto","data","photos","useEffect","useReducer","count","action","dispatch","Button","onClick","disabled","length","src","img_src","alt","App","setRovers","setCameras","loadRoversFromPage","roversFromServer","target","currentRover","find","currentCamera","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f6c2976.chunk.js","sourcesContent":["// import ky from 'ky';\n// import qs from 'qs';\n\n// const client = ky.create({\n//   prefixUrl: 'https://api.nasa.gov/mars-photos/api/v1/rovers'\n// })\n\n// const createUrl = ({ rover, ...params}) =>\n//   `${rover}/photos?${qs.stringify({\n//     api_key: process.env.REACT_APP_MARS_API_KEY,\n//     ...params\n//   })}`;\n\n// const api = {\n//   photos: {\n//     read: ({ rover, camera, sol, page }) =>\n//     client\n//       .get(\n//         createUrl({\n//           rover,\n//           camera,\n//           sol,\n//           page\n//         })\n//       )\n//       .json()\n//   }\n// };\n\n// export default api;\n\nconst BASE_URL = 'https://api.nasa.gov/mars-photos/api/v1/rovers?';\n\nconst apiKey = process.env.REACT_APP_NASA_KEY;\n\nconst API_KEY = `api_key=${apiKey}`;\n\nexport const urls = {\n  baseUrl: 'https://api.nasa.gov/mars-photos/api/v1/rovers',\n  token: API_KEY,\n}\n\n// console.log(apiKey);\n// console.log(API_KEY);\n\n// https://api.nasa.gov/mars-photos/api/v1/rovers/\n// curiosity/photos?sol=1000&camera=fhaz&api_key=DEMO_KEY\n\nconst request = async() => {\n  const response = await fetch(`${BASE_URL}${API_KEY}`);\n  const result = await response.json();\n\n  return result.rovers;\n};\n\nexport const getRovers = () => request();\n\n\nconst createPhotoUrl = ({ rover, sol, camera }) => `${BASE_URL}\n  /${rover}/photos?sol=${sol}${API_KEY}`;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './roverSelect.scss';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nexport const useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  colorStyle: {\n    color: '#bbdefb',\n  },\n  borderStyle: {\n    border: '2px solid #bbdefb'\n  },\n  bgcStyle: {\n    backgroundColor: '#3e2723'\n  }\n}));\n\n\nexport const RoverSelect = ({ selectedRover, filterByRoverName, rovers }) => {\n  const classes = useStyles()\n\n  return (\n    <div className=\"rovers\">\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel\n            htmlFor=\"outlined-age-native-simple\"\n            className={classes.colorStyle}\n          >\n            Rover\n          </InputLabel>\n          <Select\n            className={classes.bgcStyle}\n            native\n            value={selectedRover.name}\n            onChange={filterByRoverName}\n            label=\"Rover\"\n            inputProps={{\n              name: 'rover',\n              id: 'outlined-age-native-simple',\n            }}\n          >\n            <option\n              aria-label=\"None\" value=\"\"\n              className=\"rovers__option\"\n            />\n            {rovers.map(rover => (\n              <option\n                key={rover.id}\n                value={rover.name}\n              >\n                {rover.name}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n    </div>\n);\n}\n\nRoverSelect.propTypes = {\n  selectedRover: PropTypes.shape({}).isRequired,\n\n  filterByRoverName: PropTypes.func.isRequired,\n\n  rovers: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './camerasSelect.scss';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { useStyles } from '../RoverSelect';\n\nexport const CamerasSelect = ({\n  cameras,\n  filterByCamerasName,\n  selectedCamera,\n}) => {\n  const classes = useStyles()\n\n  return (\n  <div className=\"cameras\">\n    <FormControl variant=\"outlined\" className={classes.formControl }>\n          <InputLabel\n            htmlFor=\"outlined-age-native-simple\"\n            className={classes.colorStyle}\n          >\n            Camera\n          </InputLabel>\n          <Select\n            className={classes.bgcStyle}\n            native\n            value={selectedCamera.name}\n            onChange={filterByCamerasName}\n            defaultValue=\"Choose camera\"\n            label=\"Camera\"\n            inputProps={{\n              name: 'rover',\n              id: 'outlined-age-native-simple',\n            }}\n          >\n            <option\n              aria-label=\"None\" value=\"\"\n              className=\"cameras__option\"\n            />\n            {cameras.map(camera => (\n              <option\n                key={camera.id}\n                value={camera.name}\n              >\n                {camera.name}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n  </div>\n  );\n}\nCamerasSelect.propTypes = {\n  cameras: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n\n  selectedCamera: PropTypes.shape({}).isRequired,\n\n  filterByCamerasName: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './solRange.scss';\n\nexport const SolRange = ({\n  solRange,\n  selectSolDays,\n  selectedRover\n}) => {\n\n  return (\n    <div className=\"sol-range\">\n      <label\n        htmlFor=\"rangeId\"\n        className=\"\"\n      >\n        Choose sol:\n      </label>\n      <input\n        min=\"1\"\n        max={selectedRover.max_sol}\n        type=\"range\"\n        className=\"sol-range__field\"\n        id=\"rangeId\"\n        defaultValue={solRange}\n        onChange={selectSolDays}\n      />\n      <span className=\"sol-range__text\">\n        {solRange}\n      </span>\n    </div>\n  );\n};\n\nSolRange.propTypes = {\n  solRange: PropTypes.string.isRequired,\n  selectSolDays: PropTypes.func.isRequired,\n  selectedRover: PropTypes.shape({\n  }).isRequired,\n};\n","import React, { useState, useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { urls } from '../api/api';\n\nimport Button from '@material-ui/core/Button';\n\n// import IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport './nasaPhoto.scss';\n\n// import { UrlContext } from '../context/UrlContext';\n\nexport const NasaPhoto = ({\n  selectedRover,\n  selectedCamera,\n  solRange,\n  setSelectedRover,\n  setSelectedCamera,\n  setSolRange,\n}) => {\n  const [photoData, setPhotoData] = useState([]);\n  const [offSet, setOffset] = useState(0);\n  const [photoLimit, setPhotoLimit] = useState(4);\n  // const [minPhotoLimit, setMinPhotoLimit] = useState(1);\n  // const [loading, setLoading] = useState(false);\n\n\n  const { baseUrl, token } = urls;\n  let rover = '';\n  let camera = '';\n\n  if (selectedRover.hasOwnProperty('name') && selectedCamera.hasOwnProperty('name')) {\n    rover = selectedRover.name.toLowerCase();\n    camera = selectedCamera.name.toLowerCase()\n  }\n\n  const totalUrl = `${baseUrl}/${rover}/photos?sol=${solRange}&${camera}&${token}`;\n\n  const fetchPhoto = async() => {\n    if (rover && camera) {\n      const response = await fetch(totalUrl);\n      const data = await response.json();\n      setPhotoData(data.photos);\n    }\n\n  };\n\n  useEffect(() => {\n    fetchPhoto();\n  }, []);\n\n  const reducer = (count, action) => {\n    switch (action.type) {\n      case 'increase':\n        return count + 1;\n\n      case 'decrease':\n        return count - 1;\n\n      default:\n        return count;\n    }\n  }\n\n  const [count, dispatch] = useReducer(reducer, 0);\n\n  const decrease = () => dispatch({ type: 'decrease'})\n  const increase = () => dispatch({ type: 'increase'})\n\n  return (\n    <div className=\"photo\">\n      <div className=\"photo__download-block\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={fetchPhoto}\n        >\n          Download Photo\n          <PhotoCamera/>\n        </Button>\n      </div>\n        <div className=\"photo__buttons\">\n          <button\n            type=\"button\"\n            onClick={decrease}\n            disabled={count === 0}\n            className=\"photo__btn btn-decrease\"\n          >\n            <ArrowBackIosIcon />\n          </button>\n          <button\n            type=\"button\"\n            onClick={increase}\n            disabled={count === photoData.length - 1}\n            className=\"photo__btn btn-increase\"\n          >\n            <ArrowForwardIosIcon />\n          </button>\n        </div>\n      {!photoData.length && (\n        <h2 className=\"photo__title-loading\">\n          No photos, try another camera\n        </h2>\n      )}\n      {photoData.length > 1 && (\n        <div className=\"photo__container\">\n          <h2 className=\"photo__title-count\">\n            {`${count + 1} / ${photoData.length}`}\n          </h2>\n          <img\n            className=\"photo__img\"\n            src={photoData[count].img_src}\n            alt=\"rover photo\"\n          />\n          {/* <div class=\"photo__btn-load\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              // onClick={}\n            >\n              Load more\n            </Button>\n          </div> */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nNasaPhoto.propTypes = {\n  selectedRover: PropTypes.shape({}).isRequired,\n  selectedCamera: PropTypes.shape({}).isRequired,\n  solRange: PropTypes.string.isRequired,\n\n  setSelectedRover: PropTypes.func.isRequired,\n  setSelectedCamera: PropTypes.func.isRequired,\n  setSolRange: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { getRovers } from './components/api/api';\nimport { RoverSelect } from './components/RoverSelect';\nimport { CamerasSelect } from './components/CamerasSelect';\nimport { SolRange } from './components/SolRange';\nimport { NasaPhoto } from './components/NasaPhoto/';\n\nimport './app.scss';\n\nexport const App = () => {\n  const [rovers, setRovers] = useState([]);\n  const [selectedRover, setSelectedRover] = useState({});\n  const [cameras, setCameras] = useState([]);\n  const [selectedCamera, setSelectedCamera] = useState({});\n  const [solRange, setSolRange] = useState('1');\n\n  const loadRoversFromPage = async() => {\n    const roversFromServer = await getRovers();\n\n    setRovers([...roversFromServer]);\n  };\n\n  useEffect(() => {\n    loadRoversFromPage();\n  }, []);\n\n  const filterByRoverName = ({ target }) => {\n    const currentRover = rovers.find(rover => rover.name === target.value);\n\n    setSelectedRover(currentRover);\n    setCameras(currentRover.cameras);\n  };\n\n  const filterByCamerasName = ({ target }) => {\n    const currentCamera = cameras.find(camera => camera.name === target.value);\n\n    setSelectedCamera(currentCamera);\n  };\n\n  const selectSolDays = ({ target }) => {\n    setSolRange(target.value);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__title\">\n        NASA APIs\n      </h1>\n      <div className=\"app__logo\" />\n      <div className=\"app__selects\">\n        <RoverSelect\n          filterByRoverName={filterByRoverName}\n          selectedRover={selectedRover}\n          rovers={rovers}\n        />\n        <CamerasSelect\n          filterByCamerasName={filterByCamerasName}\n          selectedCamera={selectedCamera}\n          cameras={cameras}\n        />\n        <SolRange\n          selectSolDays={selectSolDays}\n          solRange={solRange}\n          selectedRover={selectedRover}\n        />\n      </div>\n      <NasaPhoto\n          selectedRover={selectedRover}\n          selectedCamera={selectedCamera}\n          solRange={solRange}\n          setSelectedRover={setSelectedRover}\n          setSelectedCamera={setSelectedCamera}\n          setSolRange={setSolRange}\n        />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}